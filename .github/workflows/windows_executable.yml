name: Build Windows executable

on:
  create:
    tags:
      - 'v*'

env:
  BUILD_TYPE: Release
  VCPKG_CMAKE_TOOLCHAIN: 'C:\vcpkg\scripts\buildsystems\vcpkg.cmake'
  VCPKG_INCLUDE_DIR: 'C:\vcpkg\installed\x64-windows-static\include'

jobs:
  build:
    name: Build Windows executable
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install Qt
      uses: jurplel/install-qt-action@v2.14.0
    - name: Install dependencies (Choco)
      run: choco install -y ninja cmake
    - name: Install dependencies (VCPKG)
      run: vcpkg install boost-system:x64-windows-static boost-format:x64-windows-static cpprestsdk:x64-windows-static nlohmann-json:x64-windows-static
    - name: System wide VCPKG integrations
      run: vcpkg integration install
    - name: Add VCPKG and Qt installation path to PATH variable
      run: $Env:PATH += ';C:\vcpkg;${{env.VCPKG_INCLUDE_DIR}};${{env.Qt5_Dir}}'
    - name: Create GetIt solution
      run: cmake . -G 'Visual Studio 17 2022' -Dpackaging=true -Duse_installed_dependencies=true -DCMAKE_CXX_FLAGS='/w' -DCMAKE_PREFIX_PATH=${{env.Qt5_Dir}} -DCMAKE_TOOLCHAIN_FILE=${{env.VCPKG_CMAKE_TOOLCHAIN}} -DVCPKG_TARGET_TRIPLET='x64-windows-static' -DBoost_INCLUDE_DIR=${{env.VCPKG_INCLUDE_DIR}}
    - name: Build GetIt
      run: devenv GetIt.sln /Build
    - name: Add Qt dependencies to built executable
      run: windeployqt ./bin/GetIt.exe
    - name: Zip GetIt executable
      run: 7z a -tzip getit.zip ./bin/GetIt.exe
    - name: Upload Windows executable as build artifact
      uses: actions/upload-artifact@v3.0.0
      with:
        name: GetIt-Windows-x64.zip
        path: ./getit.zip
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./getit.zip
        asset_name: GetIt-Windows-x64.zip
        tag: ${{ github.ref }}
